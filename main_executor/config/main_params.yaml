launch: #起動パラメータ
  ros__parameters:
    slcan: false
    scan: false
    trajectory_planner: false
    yolox_launch: true

/**:  #ワイルドカード(ここのパラメータは全ノードから読める: <名前に注意>)
  ros__parameters:
    initial_pose: [0.35, 0.55, 0.0]  #初期位置[x,y,yaw]
    2nd_initial_pose: [5.5, 0.35, 0.0]  #2つ目の初期位置[x,y,yaw]
    tf_laser2robot: [0.0,0.0,0.0,  0.0,0.0,0.0]  #ロボット->lidarのTF[x,y,z,r,p,y]

    court_color: "red" #コート情報

    # 自動の並進  速度[m/s],加速度[m/s^2],加減速度[-m/s^2],躍度[m/s^3]
    linear_max_vel: 2.0
    linear_max_acc: 3.0
    linear_max_dec: 3.0
    linear_max_jer: 0.0
    # 回転  速度[deg/sint x, int y, const std::vector<double> point1, const std::vector<double> point2],加速度[deg/s^2],加減速度[-deg/s^2],躍度[deg/s^3]
    angular_max_vel: 100.0
    angular_max_acc: 50.0
    angular_max_dec: 50.0
    angular_max_jer: 0.0
    
    canid:
      #000番台(根幹情報)
      emergency: 0x000
      heartbeat: 0x001
      restart: 0x002
      calibrate: 0x003
      reset: 0x004
      emergency_state: 0x005
      #100番台(足回り)
      linear: 0x100
      angular: 0x101
      odom_linear_x: 0x110
      odom_linear_y: 0x111
      odom_angular: 0x112
      init_angular: 0x120
      steer_reset: 0x130
      #200番台(上物)
      #ハンド
      paddy_collect: 0x200
      paddy_install: 0x201
      paddy_convergence: 0x202
      #網
      net: 0x210
      net_convergence: 0x211
      #自動化
      tof: 0x220
      hand_lift: 0x221
      hand_fb: 0x222
      hand_wrist: 0x223
      suction: 0x224
      #
      base_state: 0x230
      strage_state: 0x231
      strage_state2: 0x232
      transfer_state: 0x233
      silo_state: 0x234
      silo_state2: 0x235

      
      #デジタルボタン
      main_button: 0x410

      vel: 0x400 #適当
      ang: 0x401 #適当
        
    port:
      joy_main: 50000
      pole_share: 53000
      spline_state: 55000
      robot_state: 57000
      
    ip:
      r1_pc: "192.168.1.2"
      r2_pc: "192.168.1.3"

    convergence_ms: 100 #収束周期[ms]
    base_state_communication_ms: 50
    #リスタート、緊急、足回りの手自動、上物の手自動、手動の射角、ボタンのカラー情報
    defalt_restart_flag: false
    defalt_emergency_flag: false
    defalt_move_autonomous_flag: false
    defalt_slow_speed_flag: false
    #収束の初期値
    defalt_spline_convergence: false
    defalt_arm_convergence: false
    defalt_net_convergence: false

controller_interface_node:
  ros__parameters:
    # 手動の高速　並進　速度[m/s],加速度[m/s^2],加減速度[-m/s^2]
    high_linear_max_vel: 1.5
    high_linear_max_acc: 3.0
    high_linear_max_dec: 2.0
    # 手動の低速　並進　速度[m/s],加速度[m/s^2],加減速度[-m/s^2]
    slow_linear_max_vel: 0.5
    slow_linear_max_acc: 1.5
    slow_linear_max_dec: 1.5
    # 手動の回転  速度[deg/s],加速度[deg/s^2],加減速度[-deg/s^2]
    angular_max_vel: 100.0
    angular_max_acc: 360.0
    angular_max_dec: 360.0
    
    heartbeat_ms: 100 #ハートビート周期[ms]
    interval_ms: 50
    start_ms: 3000
    controller_ms: 100
    mainboard_ms: 200
    
    initial_pickup_state: "A"
    initial_inject_state: "B"

    connection_check: false

rasnac_localization:
  ros__parameters:
    plot_mode: true #実機のときはfalse
    laser_weight: 1.0 #lidarの重み->値を大きくするとlidarが優先される
    odom_weight_liner: 3.0e-4 #値が大きくなると共分散が小さくなる 
    odom_weight_angler: 3.0e-5
    voxel_size: 0.07
    trial_num: 40
    inlier_dist_threshold: 0.012
    inlier_length_threshold: 0.5 #インライアのしきい値
    second_ransac: false           #2回ransacをするか
    robot_type: "R2"

spline_pid_node:
  ros__parameters:
    interval_ms: 20     #サイクル周期[ms]
    curvature_attenuation_rate: 0.0 #曲率の速度の減衰>=0 (0だと減衰なし)
    linear_planner_vel_limit_gain: 1.0  #速度計画機の速度上限値にかけるゲイン

    linear_planner_gain: 1.3 #並進速度計画機ゲイン
    linear_pos_gain: 2.0  #並進位置ズレのゲイン
    linear_pos_diff_gain: 1.0
    linear_pos_integral_gain: 0.05  #並進位置ズレの積分ゲイン

    angular_planner_gain: 1.0 #回転速度計画機ゲイン
    angular_pos_gain: 2.0 #回転位置ズレのゲイン
    angular_pos_integral_gain: 0.01 #回転位置ズレの積分ゲイン

    linear_pos_tolerance: 0.02  #並進到達位置の許容誤差[m]
    angular_pos_tolerance: 2.0  #回転到達位置の許容誤差[deg]

spline_trajectories_node:
  ros__parameters:
    resolution: 0.01  #起動点の分解能[m]

detection_interface_node:
  ros__parameters:
    str_range_point1_blue: [0, 1170] #ボール識別から、どの回収ポイントかを判断するポイント1[x,y]
    str_range_point2_blue: [1920, 630] #ボール識別から、どの回収ポイントかを判断するポイント2[x,y]
    str_range_point1_red: [0, 580] #ボール識別から、どの回収ポイントかを判断するポイント1[x,y]
    str_range_point2_red: [1920, 1230] #ボール識別から、どの回収ポイントかを判断するポイント2[x,y]

    #C2からひし形を見たときの囲い
    str_range_point1_1_C2: [0, 1180] #左上の線
    str_range_point1_2_C2: [1920, 560]
    str_range_point2_1_C2: [0, 1650] #右下の線
    str_range_point2_2_C2: [1920, 590]
    str_range_point3_1_C2: [0, 650] #左下の線
    str_range_point3_2_C2: [1920, 1550]
    str_range_point4_1_C2: [0, 620] #右上の線
    str_range_point4_2_C2: [1920, 1100]

    #C3とC5から、ST1~8の中のどの回収ポイントかを判断するときに一番手前のバウンディングボックスから一定量引く
    str_range_y_C3orC5_2: 160

    #ST系の行ったときの吸引判定
    front_suction_check_point: [200, 650] #/front_ballがtrueだった場合(y,x)
    back_suction_check_point: [500, 700] #/front_ballがfalseだった場合(y,x)
    depth_front_suction_check_value: 200 
    depth_back_suction_check_value: 330

    #realsenseの
    realsense_max_x: 1100
    realsense_min_x: 200
    realsense_min_y: 350

sequencer_node:
  ros__parameters:
    strage_dist: [0.38 , 0.20] #m
    suction_wait: 2.0 #ms 
    silo_wait: 3.0 #ms 