launch: #起動パラメータ
  ros__parameters:
    slcan: true
    scan: true
    trajectory_planner: true
    yolox_launch: true

/**:  #ワイルドカード(ここのパラメータは全ノードから読める: <名前に注意>)
  ros__parameters:
    initial_pose: [0.35, 0.55, 0.0]  #初期位置[x,y,yaw]
    2nd_initial_pose: [5.5, 0.35, 0.0]  #2つ目の初期位置[x,y,yaw]
    # tf_laser2robot: [0.2785,0.0,0.0,  3.14159,0.0,0.0]  #ロボット->lidarのTF[x,y,z,r,p,y]
    tf_laser2robot: [0.2785,0.0,0.0,  3.14159,0.0,1.5708]  #ロボット->lidarのTF[x,y,z,r,p,y]

    court_color: "red" #コート情報

    # 自動の並進  速度[m/s],加速度[m/s^2],加減速度[-m/s^2],躍度[m/s^3]
    linear_max_vel: 1.5
    linear_max_acc: 2.5
    linear_max_dec: 1.0
    linear_max_jer: 0.0
    # 回転  速度[deg/sint x, int y, const std::vector<double> point1, const std::vector<double> point2],加速度[deg/s^2],加減速度[-deg/s^2],躍度[deg/s^3]
    angular_max_vel: 100.0
    angular_max_acc: 360.0
    angular_max_dec: 360.0
    angular_max_jer: 0.0
    
    canid:
      #000番台(根幹情報)
      emergency: 0x000
      heartbeat: 0x001
      restart: 0x002
      calibrate: 0x003
      reset: 0x004
      emergency_state: 0x005
      #100番台(足回り)
      linear: 0x100
      angular: 0x101
      odom_linear_x: 0x110
      odom_linear_y: 0x111
      odom_angular: 0x112
      init_angular: 0x120
      steer_reset: 0x130
      #200番台(上物)
      #ハンド
      paddy_collect: 0x200
      paddy_install: 0x201
      paddy_convergence: 0x202

      #網
      net: 0x210
      net_convergence: 0x211
      #自動化
      tof: 0x220
      hand_lift: 0x221
      hand_fb: 0x222
      hand_wrist: 0x223
      suction: 0x224
      
      #デジタルボタン
      main_button: 0x230

      vel: 0x400 #適当
      ang: 0x401 #適当
        
    port:
      joy_main: 50000
      pole_share: 53000
      spline_state: 55000
      robot_state: 57000
      
    ip:
      r1_pc: "192.168.1.2"
      r2_pc: "192.168.1.3"

    convergence_ms: 100 #収束周期[ms]
    base_state_communication_ms: 50
    #リスタート、緊急、足回りの手自動、上物の手自動、手動の射角、ボタンのカラー情報
    defalt_restart_flag: false
    defalt_emergency_flag: false
    defalt_move_autonomous_flag: false
    defalt_slow_speed_flag: false
    #収束の初期値
    defalt_spline_convergence: false
    defalt_arm_convergence: false
    defalt_net_convergence: false

controller_interface_node:
  ros__parameters:
    # 手動の高速　並進　速度[m/s],加速度[m/s^2],加減速度[-m/s^2]
    high_linear_max_vel: 1.5
    high_linear_max_acc: 3.0
    high_linear_max_dec: 2.0
    # 手動の低速　並進　速度[m/s],加速度[m/s^2],加減速度[-m/s^2]
    slow_linear_max_vel: 0.5
    slow_linear_max_acc: 1.5
    slow_linear_max_dec: 1.5
    # 手動の回転  速度[deg/s],加速度[deg/s^2],加減速度[-deg/s^2]
    angular_max_vel: 100.0
    angular_max_acc: 360.0
    angular_max_dec: 360.0
    
    heartbeat_ms: 100 #ハートビート周期[ms]
    interval_ms: 50
    start_ms: 3000
    controller_ms: 100
    mainboard_ms: 200
    
    initial_pickup_state: "A"
    initial_inject_state: "B"

rasnac_localization:
  ros__parameters:
    plot_mode: true #実機のときはfalse
    laser_weight: 1.0 #lidarの重み->値を大きくするとlidarが優先される
    odom_weight_liner: 4.0e-4 #値が大きくなると共分散が小さくなる 
    odom_weight_angler: 3.0e-4
    voxel_size: 0.05
    trial_num: 50
    inlier_dist_threshold: 0.0126
    inlier_length_threshold: 0.5 #インライアのしきい値
    second_ransac: false           #2回ransacをするか
    #以下カルマンフィルタのノイズ->値を小さくするとセンサーが優先される
    cov_sys_px: 1.5    # システム雑音の位置x[m]の標準偏差
    cov_sys_py: 1.5    # システム雑音の位置x[m]の標準偏差
    cov_sys_yaw: 0.5   # システム雑音の角度yaw[deg]の標準偏差 
    cov_obs_px1: 0.6   # 観測雑音の位置x[m]の標準偏差
    cov_obs_py1: 0.6   # 観測雑音の位置y[m]の標準偏差
    cov_obs_px2: 0.9   # 観測雑音の位置x[m]の標準偏差
    cov_obs_py2: 0.9   # 観測雑音の位置y[m]の標準偏差
    cov_px: 15.0        # x誤差共分散行列
    cov_py: 15.0        # y誤差共分散行列

spline_pid_node:
  ros__parameters:
    interval_ms: 20     #サイクル周期[ms]
    curvature_attenuation_rate: 0.0 #曲率の速度の減衰>=0 (0だと減衰なし)
    linear_planner_vel_limit_gain: 1.0  #速度計画機の速度上限値にかけるゲイン

    linear_planner_gain: 2.0 #並進速度計画機ゲイン
    linear_pos_gain: 3.0  #並進位置ズレのゲイン
    linear_pos_diff_gain: 1.0
    linear_pos_integral_gain: 0.01  #並進位置ズレの積分ゲイン

    angular_planner_gain: 1.0 #回転速度計画機ゲイン
    angular_pos_gain: 1.0 #回転位置ズレのゲイン
    angular_pos_integral_gain: 0.01 #回転位置ズレの積分ゲイン

    linear_pos_tolerance: 0.02  #並進到達位置の許容誤差[m]
    angular_pos_tolerance: 2.0  #回転到達位置の許容誤差[deg]

spline_trajectories_node:
  ros__parameters:
    resolution: 0.01  #起動点の分解能[m]

detection_interface_node:
  ros__parameters:
    #ひし形モードのひし形に向かっている、坂上の自己位置の範囲[x_min,x_max,y_min,y_max,z_min,z_max]
    str_self_pose_range: [9.7, 10.3, -3.58, -3.52, -0.05, 0.05]
    #ひし形モードのサイロに向かっている、坂上の自己位置の範囲[x_min,x_max,y_min,y_max,z_min,z_max]
    siro_self_pose_range: [9.8, 10.2, -3.8, -3.0, -2.5, -2.3]

    str_range_point1_blue: [0.0, 1170.0] #ボール識別から、どの回収ポイントかを判断するポイント1[x,y]
    str_range_point2_blue: [1920.0, 630.0] #ボール識別から、どの回収ポイントかを判断するポイント2[x,y]
    str_range_point1_red: [0.0, 580.0] #ボール識別から、どの回収ポイントかを判断するポイント1[x,y]
    str_range_point2_red: [1920.0, 1120.0] #ボール識別から、どの回収ポイントかを判断するポイント2[x,y]

    #C2からひし形を見たときの囲い
    str_range_point1_1_C2: [0.0, 1115.0] #左上の線
    str_range_point1_2_C2: [1920.0, 570.0]
    str_range_point2_1_C2: [0.0, 1310.0] #右下の線
    str_range_point2_2_C2: [1920.0, 700.0]
    str_range_point3_1_C2: [0.0, 650.0] #左下の線
    str_range_point3_2_C2: [1920.0, 1250.0]
    str_range_point4_1_C2: [0.0, 590.0] #右上の線
    str_range_point4_2_C2: [1920.0, 1020.0]

    #C3とC5から、ST1~8の中のどの回収ポイントかを判断するポイント_C3orC5[x1,x2,x3]
    str_range_x_C3orC5: [390.0, 560.0, 710.0] 
    str_range_y_C3orC5: 250.0 

    #ST1~8から手前か奥か判断するポイント
    str_range_x_ST: [390.0, 560.0] 
    str_range_y_ST: [350.0, 500.0] 

    siro_ball_range_y: [700.0, 780.0, 880.0] #ボールが何段目か[y1, y2]
    siro_ball_range_x: [520.0, 768.0, 1152.0, 1450.0] #ボールがどのサイロか[x1, x2, x3, x4]